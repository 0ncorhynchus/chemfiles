language: cpp

env:
  global:
    secure: Mf7f3PP+AHqyOMEp9koj+mTBSVfo03XNFLJ6offmH3IWIj+N5fxwn+tN3H/hKUeL8mvzfHjXPAkYkWKVwcamoQ9ktoYLDJ83HCa4muCUxENz/SAR2DvWf8ix7ggvIP8wZCrNyq8ssw+5F1FRmauF7HjTDPCtBiz/sjvK94XVwXU=
    secure: vemv2pi+y10L/3QkiDTdgbsug2Qv97OUiMjyRw9pYIjDoNhws1jzuKMFJt1YvUNZcROUA1hEkDYDDCmGTXAo7zr+pk+ru9e8h6q9LH+uPZWKgWHUzEyFlLB3wve3fCzeTIqvvSC+87bxYhJg53TrrCyRXBu3jnHoqJKr2RhWwOQ=

compiler:
  - gcc
  - clang

install:
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y  # gcc-4.9
  - sudo add-apt-repository ppa:h-rayflood/llvm -y          # clang-3.5
  - sudo apt-get update -qq
  # Compilers
  - sudo apt-get install -y g++-4.9        # Needed by clang for a C++11 stdlib
  - sudo apt-get install -y gfortran-4.9
  # Libraries
  - sudo apt-get install -y libnetcdf-dev
  # Coverage stuff
  - gem install coveralls-lcov
  - wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
  - tar xf lcov_1.11.orig.tar.gz
  - sudo make -C lcov-1.11/ install
  # Setting environement
  - export CMAKE_ARGS="-DCMAKE_BUILD_TYPE=debug -DBUILD_TESTS=ON -DPYTHON_BINDING=ON -DFORTRAN_BINDING=ON"
  - export FC=gfortran-4.9
  - |
    if [ ${CC} == "gcc" ]
    then
        export CC=gcc-4.9
        export CXX=g++-4.9
        export CMAKE_ARGS="$CMAKE_ARGS -DCODE_COVERAGE=ON"
    fi
  - |
    if [ ${CC} == "clang" ]
    then
        sudo apt-get install -y clang-3.4
        export CC=clang-3.4
        export CXX=clang++-3.4
    fi
  - mkdir build
  - cd build
  - wget http://www.cmake.org/files/v3.2/cmake-3.2.1-Linux-x86_64.sh
  - sh cmake-3.2.1-Linux-x86_64.sh --prefix=. --exclude-subdir
   # Conda: binary builds for Python
  - wget "http://repo.continuum.io/miniconda/Miniconda-3.5.5-Linux-x86_64.sh"
  - bash Miniconda-3.5.5-Linux-x86_64.sh -b
  - export PATH=$HOME/miniconda/bin:$PATH
  - conda update --yes conda
  - conda install --yes conda-build jinja2 binstar numpy
  - export CONDA_RECIPE=${TRAVIS_BUILD_DIR}/scripts/conda-recipe

before_script:
  - cd ${TRAVIS_BUILD_DIR}/build
  - ./bin/cmake $CMAKE_ARGS ..
  # Cleanup the coverage data
  - lcov --directory $(pwd) --zerocounters

script:
  - cd ${TRAVIS_BUILD_DIR}/build
  - make
  - ctest --output-on-failure
  # Build conda recipe
  - sudo apt-get install -y tree
  - cd ${TRAVIS_BUILD_DIR}
  - conda build $CONDA_RECIPE

after_success:
  - cd ${TRAVIS_BUILD_DIR}/build
  # Parse and submit coverage data
  - lcov --gcov-tool gcov-4.9 --directory $(pwd) --capture --output-file coverage.info
  - lcov --remove coverage.info 'tests/*' 'Chemharp/build/*' '/usr/*' --output-file coverage.info
  - lcov --list coverage.info
  - coveralls-lcov --repo-token=${COVERALLS_TOKEN} coverage.info
  # Submit binary build to binstar for conda
  - cd ${TRAVIS_BUILD_DIR}
  - |
    if [ ${CC} == "gcc-4.9" ]
    then
        python $CONDA_RECIPE/move-conda-package.py
        binstar -t $BINSTAR_TOKEN upload --force *.tar.bz2
    fi
