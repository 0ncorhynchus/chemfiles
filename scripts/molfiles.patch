VMD Molfiles patches used in chemfiles

--- molfile_plugin/src/Gromacs.h
+++ molfile_plugin/src/Gromacs.h
@@ -1106,11 +1106,11 @@
 // header block.
 //
 static int gro_timestep(md_file *mf, md_ts *ts) {
-	char buf[MAX_GRO_LINE + 1];
-	long coord;
-	int i, n, boxItems;
-  float x[3], y[3], z[3];
-  char xposc[12], yposc[12], zposc[12];
+  char buf[MAX_GRO_LINE + 1] = {0};
+  long coord = 0;
+  int i = 0, n = 0, boxItems = 0;
+  float x[3] = {0}, y[3] = {0}, z[3] = {0};
+  char xposc[12] = {0}, yposc[12] = {0}, zposc[12] = {0};

   if (!mf || !ts)
     return mdio_seterror(MDIO_BADPARAMS);

--- molfile_plugin/src/lammpsplugin.c
+++ molfile_plugin/src/lammpsplugin.c
@@ -170,6 +170,17 @@
 #endif
 } lammpsdata;
 
+// The kernel provided strdup function return garbage when compiled with gcc 
+// 5.1.1 on Fedora 23/24 x86_64, dereferencing or freeing the string causes a
+// segfault.
+static char* myStrdup(const char* string) {
+  size_t len = strlen(string);
+  char* buffer = malloc(len + 1);
+  strcpy(buffer, string);
+  buffer[len] = '\0';
+  return buffer;
+}
+
 /* merge sort for integer atom id map: merge function */
 static void id_merge(int *output, int *left, int nl, int *right, int nr)
 {
@@ -362,7 +373,7 @@
  
   data = (lammpsdata *)calloc(1, sizeof(lammpsdata));
   data->file = fd;
-  data->file_name = strdup(filename);
+  data->file_name = myStrdup(filename);
   data->dip2atoms = -1.0;
   data->fieldinit = 0;
   *natoms = 0;
@@ -506,7 +517,7 @@
 #if LAMMPS_DEBUG  
   fprintf(stderr,"fieldlist for atoms: %s", fieldlist);
 #if 0  /* simulate old style trajectory */
-  fieldlist = strdup("\n");
+  fieldlist = myStrdup("\n");
 #endif
 #endif
 
@@ -1398,7 +1409,7 @@
   data = (lammpsdata *)malloc(sizeof(lammpsdata));
   data->numatoms = natoms;
   data->fp = fp;
-  data->file_name = strdup(filename);
+  data->file_name = myStrdup(filename);
   data->nstep = 0;
   return data;
 }
